devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
y <- c(1,3,4,2,23,4)
mle <- function(y){m <- sum(y)/length(y)}
for(i in 1:1000){
boots <- cbind(boots,sample(y,length(y),replace = TRUE))
}
boots <- NULL
for(i in 1:1000){
boots <- cbind(boots,sample(y,length(y),replace = TRUE))
}
laply(boots, mle)
library(plyr)
laply(boots, mle)
laply(boots, 2, mle)
adply(.data = boots, .margins = 2, .fun = mle)
adply(.data = boots, .margins = 2, .fun = mle)$V1
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::library()
devtools::load_all()
y <- rpois(100,50)
mle(y)
standarderror(y)
standarderror(y, "basic")
standarderror(y, "bootstrap")
logLik(y)
logLik(y, mle(y))
estimatePois(y, "basic")
devtools::load
devtools::load_all()
estimatePois(y, "basic")
pois <- estimatePois(y, "basic")
pois[[1]]
View(pois)
devtools::document()
devtools::load_all()
mle(y)
estimatePois(y)
estimatePois(y, "basic")
y <- cbind(y, "tree")
estimatePois(y, "basic")
devtools::document()
devtools::load_all()
y <- rpois(100,50)
y <- cbind(y,-1)
estimatePois(y, "basic")
devtools::document()
devtools::load_all()
mle(y)
estimatePois(y, "basic")
devtools::document()
devtools::load_all()
mle(y)
devtools::document()
devtools::load_all()
mle(y)
mle(y)
devtools::reload()
mle(y)
View(y)
y <- cbind(y, -1)
mle(y)
View(y)
y <- rpois(100,50)
y <- c(y, -1)
mle(y)
devtools::document()
devtools::install()
devtools::load_all()
mle(y)
y <- rpois(100, 50)
y <- c(y, "tree")
mle(y)
estimatePois(y, "basic")
y <- rpois(100,50)
estimatePois(y, "basic")
?mle
?logLik
?standardError
?estimatePois
?PoisMLE
?`PoisMLE-class`
y <- rpois(100,50)
logLik(y,2)
?logLik
logLik(y, L = 2)
mle(y)
mle(y)
logLik(y, L = 50.47)
standardError(y,"bootstrap")
standardError(y,"basic")
#calculating standard errors
standarderror(y,"bootstrap")
standarderror(y,"basic")
#Using the whole estimate function
pois <- estimatePois(y, "bootstrap")
#here we try and input some non positive numbers
y2 <- c(pois(100,50), -1)
mle(y2)
#here we try and input some non positive numbers
y2 <- c(pois(100,50), -1)
#here we try and input some non positive numbers
y2 <- c(rpois(100,50), -1)
mle(y2)
#next we can try to run it with characters in our data
y2 <- c(rpois(100,50), "test")
mle(y2)
#What if we try and run the standard error function without a type
standardError(y)
#What if we try and run the standard error function without a type
standarderror(y)
#We can try the whole estimation without a type
estimatePois(y)
#Compliling my code and checking it
current.code <- as.package("PoisMLE")
## Load libraries and set working directory
library(devtools)
library(roxygen2)
#Compliling my code and checking it
current.code <- as.package("PoisMLE")
#Compliling my code and checking it
current.code <- as.package("easyPois")
#Package directory
setwd("/Users/amaancharaniya/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Package")
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Packagge")
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Packagge")
#Compliling my code and checking it
current.code <- as.package("easyPois")
check(current.code)
load_all(current.code)
document(current.code)
## Install package
install(current.code)
## Let's look at a function
?`PoisMLE-class`
## Let's look at a function
??`PoisMLE-class`
?logLik
?standarderror
?estimatePois
library(current.code)
load_all()
y <- rpois(100,50)
mle(y)
logLik(y, L = 50.47)
## Install package
devtools::load_all()
#Package directory
setwd("/Users/amaancharaniya/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Package/easyPois")
#Package directory
setwd("~/Users/amaancharaniya/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Package/easyPois")
setwd("~/Documents")
setwd("~/Documents/WashU")
setwd("~/Documents/WashU/Year Two")
setwd("~/Documents/WashU/Year Two/R Class")
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets")
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022")
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Packagge")
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Packagge/easyPois")
#Compliling my code and checking it
current.code <- as.package("easyPois")
#Package directory
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Packagge/easyPois")
## Install package
devtools::load_all()
#Package directory
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Packagge")
#Compiling my code and checking it
current.code <- as.package("easyPois")
check(current.code)
load_all(current.code)
document(current.code)
## loading package
setwd("~/Documents/WashU/Year Two/R Class/Problem Sets/AppliedStatisticalProgramming2022/Exam_Packagge/easyPois")
devtools::load_all()
## Let's look at a function
??`PoisMLE-class`
?logLik
?mle
?standarderror
?estimatePois
## Let's try it out
set.seed(123)
y <- rpois(100,50)
mle(y)
logLik(y, L = 50.47)
#calculating standard errors
standarderror(y,"bootstrap")
standarderror(y,"basic")
#Using the whole estimate function
pois <- estimatePois(y, "bootstrap")
#here we try and input some non positive numbers
y2 <- c(rpois(100,50), -1)
mle(y2)
